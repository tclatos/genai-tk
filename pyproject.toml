[project]
name = "genai-tk"
version = "0.1.0"
description = "GenAI Toolkit - Core components for building AI applications"
authors = [{ name = "Thierry Caminel", email = "thierry.caminel@atos.net" }]
requires-python = ">=3.12,<3.13"
dependencies = [
    # Core dependencies - minimal set for the toolkit
    "pydantic>=2.7.0,<3",       # Data validation framework
    "loguru>=0.7.3",            # Logging library
    "typer>=0.13.0",            # CLI framework
    "omegaconf>=2.3.0",         # Configuration management
    "rich[jupyter]>=13.9.4",    # Terminal formatting
    "universal-pathlib>=0.2.6", # Cross-platform paths
    "python-dotenv>=1.1.1",     # Environment variables
    "beartype>=0.21.0",         # Runtime type checking
    "devtools>=0.12.2",         # Development utilities

    # AI/ML Core Dependencies (required for core functionality)
    "langchain>=1.0",
    "langchain-core>=1.0",
    "langchain-community>=0.4",
    #  "langchain-experimental>=0.0.42",
    "langgraph>=1.0",
    "langserve>=0.3",
    "deepagents>=0.0.5",
    "langchainhub>=0.1",
    "langchain-openai>=1.0",
    "langchain-ollama>=1.0",
    "langchain-deepseek>=1.0",
    "langchain-mistralai>=1.0",
    "langchain-mcp-adapters>=0.1",
    "langchain-groq>=1.0",
    "openai>=1.80.0",
    "litellm>=1.74,<2",
    "mistralai>=1.7.0",
    "smolagents[toolkit, mcp, openai, litellm, docker]>=1.17",
    "mcp[cli]>=1.4.1",

    # Extra features (moved from extra group - commonly used)
    "chromadb>=1.0",
    "langchain-chroma>=1.0",
    "gpt-researcher>=0.13",
    "unidecode>=1.3.8",
    "tavily-python>=0.7.12",
    "duckduckgo-search>=6.1.6",
    "openpyxl>=3.1.5",
    "fuzzysearch>=0.8.0",
    "markpickle>=1.6.1",
    "markitdown[pdf, docx, pptx]>=0.1.3",

    # Knowledge Graphs (moved from kg group - core for graph operations)
    "baml-cli>=0.1.0",
    "langchain-kuzu>=0.3.0",
    "kuzu>=0.7.1",

    # NLP & Search (moved from nlp group - core for text processing)
    "spacy>=3.7.4",
    "rank-bm25>=0.2.2",
    "bm25s>=0.2.13",
    "en-core-web-sm @https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0-py3-none-any.whl",
    "en-core-web-lg @https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.8.0/en_core_web_lg-3.8.0-py3-none-any.whl",
    "abbreviations>=0.2.5",
]

[project.urls]
Homepage = "https://github.com/tclatos/genai-tk"
Repository = "https://github.com/tclatos/genai-tk"

[dependency-groups]
# Note: consider using project.optional-dependencies (extras) 

postgres = [ # PostgreSQL
    "langchain-postgres>=0.0.15", # PostgreSQL integration for LangChain
    "psycopg[binary]>=3.2.9",     # PostgreSQL adapter v3
    "psycopg2-binary>=2.9.10",    # PostgreSQL adapter v2
]

browser-control = [ # Browser Control
    "playwright>=1.51.0",     # Browser automation
    "browser-use-sdk>=2.0.4", # Browser automation agent
]

transformers = [ #   Transformers (large dependency)
    "accelerate>=1.4.0",            # Model acceleration
    "langchain-huggingface>=0.1.2", # Hugging Face integration
    "sentence-transformers>=3.4.1", # Sentence embeddings
]
autogen = [ # AutoGen
    "autogen-openaiext-client>=0.0.3", # OpenAI extension client
    "autogen-agentchat>=0.4.3",        # Multi-agent chat framework
    "autogen-ext[openai]>=0.4.3",      # AutoGen OpenAI extensions
]

dev = [
    "ruff>=0.9.1",                  # Python linter
    "pytest>=8.1.1",                # Testing framework
    "pytest-asyncio>=0.24.0",       # Async test support
    "faker>=25.0.0",                # Fake data generation for tests
    "presidio-analyzer>=2.2.360",   # PII detection
    "presidio-anonymizer>=2.2.360", # PII anonymization
    "ipykernel>=6.29.4",            # Jupyter kernel
    "ipywidgets>=8.1.2",            # Jupyter widgets
]

[tool.uv]
default-groups = ["dev", "postgres"]

package = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["genai_tk"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
builtins = ["ic", "debug"]
line-length = 120

[tool.ruff.lint]
select = [
    "E", # Pycodestyle errors (PEP 8 style violations)
    "F", # Pyflakes errors (basic syntax and logic errors)
    "I", # isort rules (import sorting)
    "W", # Pycodestyle warnings (style issues that aren't errors)
    "B", # Bugbear - catches common bugs and anti-patterns                                                                                      
    "C", # Better comprehensions    
    #   "ASYNC", # Async 
    #   "ANN",   # Annotations
    "PIE",
    "PD",   # Pandas
    "FURB", # refurbishing and modernizing
]

ignore = [
    "E501",   # Line too long (we use 120 chars instead of default 88) 
    "W291",   # Trailing whitespace 
    "B006",   # Do not use mutable data structures for argument defaults
    "C901",   # Function is too complex , 
    "ANN401", # Annotated with Any
    "ANN002", # Annotate *args
    "ANN003", # Annotate **kwarg
    "ANN201", # Missing return type
    "ANN202", # Missing return info
]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "Linux"
reportTypedDictNotRequiredAccess = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
markers = ["performance_tests: marks tests as performance tests"]


[project.scripts]
cli = "genai_tk.main.cli:main"
